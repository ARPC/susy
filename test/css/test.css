@charset "UTF-8";
/* # Module: Susy Get Function [function] */
/* ---------------------------------------- */
/* Test: Returns a function or function-name */
/*   ✔ ""susy-get"" and ""susy-get"" should be equal */
/*  */
/* Test: Returned function or name is callable */
/*   ✔ "4" and "4" should be equal */
/*  */
/*  */
/* # Module: Susy Error */
/* ---------------------- */
/* Test: Allow errors to return without blocking compilation */
/*   ✔ ""ERROR [_susy-error test] This is a test error message"" and ""ERROR [_susy-error test] This is a test error message"" should be equal */
/*  */
/*  */
/* # Module: Su Span [function] */
/* ------------------------------ */
/* Test: Fluid */
/*   ✔ Returns fluid span if no units are given */
/*  */
/* Test: Static */
/*   ✔ Returns static span if units are given */
/*  */
/* Test: Explicit column span */
/*   ✔ Handles explicit column-spans */
/*  */
/* Test: Explicit length span */
/*   ✔ Handles explicit length-spans */
/*  */
/*  */
/* # Module: Su Gutter [function] */
/* -------------------------------- */
/* Test: Static gutters */
/*   ✔ Static gutters are returned directly */
/*  */
/* Test: Fluid gutters */
/*   ✔ Gutters are calculated as a percentage of context */
/*  */
/*  */
/* # Module: Su Sum [function] */
/* ----------------------------- */
/* Test: Calculate the total units in a fluid grid */
/*   ✔ Returns combined column and gutter units */
/*  */
/* Test: Calculate the total units in a static grid */
/*   ✔ Returns combined column and gutter units */
/*  */
/* Test: Handle non-comparable gutters */
/*   ✔ No static gutters are added to fluid grids */
/*  */
/* Test: Handle single-column spans */
/*   ✔ No static gutters are added to fluid grids */
/*  */
/*  */
/* # Module: Su Slice [function] */
/* ------------------------------- */
/* Test: Slice a grid */
/*   ✔ Returns subset of asymmetrical columns based on span and location */
/*  */
/* Test: Slice a grid with fractions */
/*   ✔ Slice a fraction of an asymmetrical column */
/*  */
/*  */
/* # Module: Susy Settings [function] */
/* ------------------------------------ */
/* Test: Default configuration */
/*   ✔ Returns merged map of Susy default config settings */
/*  */
/* Test: Configuration overrides */
/*   ✔ Returns merged map of Susy defaults with custom overrides */
/*  */
/* Test: Multiple overrides */
/*   ✔ Returns merged map of Susy defaults with multiple overrides */
/*  */
/*  */
/* # Module: Susy Get [function] */
/* ------------------------------- */
/* Test: Get value from user settings */
/*   ✔ Susy-get and map-get should return the same value */
/*  */
/* Test: Get falsey value from user settings */
/*   ✔ Susy-get and map-get should return the same value */
/*  */
/* Test: Get value from defaults */
/*   ✔ Susy-get and map-get should return the same value */
/*  */
/* Test: Unknown setting error */
/*   ✔ ""ERROR [susy-get] There is no Susy setting called `wtf`"" and ""ERROR [susy-get] There is no Susy setting called `wtf`"" should be equal */
/*  */
/*  */
/* # Module: Su Valid Span [function] */
/* ------------------------------------ */
/* Test: Arbitrary span */
/*   ✔ A unitless span is valid */
/*  */
/* Test: Explicit span */
/*   ✔ A united length is valid */
/*  */
/* Test: Explicit list of columns */
/*   ✔ A list of comparable columns is valid */
/*  */
/* Test: Mismatched list error */
/*   ✔ ""ERROR [su-valid-span] [list] `1px 2 4em 3` is not a valid number, length, or column-list for $span."" and ""ERROR [su-valid-span] [list] `1px 2 4em 3` is not a valid number, length, or column-list for $span."" should be equal */
/*  */
/* Test: Unknown type error */
/*   ✔ ""ERROR [su-valid-span] [color] `blue` is not a valid number, length, or column-list for $span."" and ""ERROR [su-valid-span] [color] `blue` is not a valid number, length, or column-list for $span."" should be equal */
/*  */
/*  */
/* # Module: Su Valid Columns [function] */
/* --------------------------------------- */
/* Test: Fluid columns */
/*   ✔ A list of unitless numbers is list of fluid columns */
/*  */
/* Test: Single fluid column */
/*   ✔ A single unitless number is a single fluid column */
/*  */
/* Test: Static columns */
/*   ✔ A list of comparably-united numbers are a list of static columns */
/*  */
/* Test: Single static column */
/*   ✔ A single united number is a single static column */
/*  */
/* Test: Mismatched units error */
/*   ✔ ""ERROR [su-valid-columns] [list] `1px 2 4em 3` is not a valid list of comparable lengths for $columns."" and ""ERROR [su-valid-columns] [list] `1px 2 4em 3` is not a valid list of comparable lengths for $columns."" should be equal */
/*  */
/* Test: Silent failure */
/*   ✔ "null" and "null" should be equal */
/*  */
/* Test: Mismatched unitless error */
/*   ✔ ""ERROR [su-valid-columns] [list] `1 2 4em 3` is not a valid list of comparable lengths for $columns."" and ""ERROR [su-valid-columns] [list] `1 2 4em 3` is not a valid list of comparable lengths for $columns."" should be equal */
/*   ✔ ""ERROR [su-valid-columns] [list] `1em 2 4em 3` is not a valid list of comparable lengths for $columns."" and ""ERROR [su-valid-columns] [list] `1em 2 4em 3` is not a valid list of comparable lengths for $columns."" should be equal */
/*  */
/*  */
/* # Module: Su Valid Gutters [function] */
/* --------------------------------------- */
/* Test: Fluid */
/*   ✔ A unitless number is a valid setting for gutters */
/*  */
/* Test: Static */
/*   ✔ Any length is a valid setting for gutters on a static grid */
/*  */
/* Test: Static gutters, fluid grid */
/*   ✔ Static gutters are allowed on a fluid grid */
/*  */
/* Test: Invalid gutters error */
/*   ✔ "'ERROR [su-valid-gutters] [string] `"wtf"` is not a value for $gutters.'" and "'ERROR [su-valid-gutters] [string] `"wtf"` is not a value for $gutters.'" should be equal */
/*  */
/* Test: Mismatched gutter/column unitless error */
/*   ✔ ""ERROR [su-valid-gutters] Gutters must have units for a static grid."" and ""ERROR [su-valid-gutters] Gutters must have units for a static grid."" should be equal */
/*  */
/* Test: Mismatched gutter/column units error */
/*   ✔ ""ERROR [su-valid-gutters] Gutter and column units must be comparable."" and ""ERROR [su-valid-gutters] Gutter and column units must be comparable."" should be equal */
/*  */
/*  */
/* # Module: Su Valid Spread [function] */
/* -------------------------------------- */
/* Test: Numeric spread */
/*   ✔ Valid number is returned directly */
/*  */
/* Test: Unknown spread error */
/*   ✔ ""ERROR [su-valid-spread] [number] `4` is not a normalized [0 | 1 | -1] value for `$spread`."" and ""ERROR [su-valid-spread] [number] `4` is not a normalized [0 | 1 | -1] value for `$spread`."" should be equal */
/*  */
/*  */
/* # Module: Su Valid Location [function] */
/* ---------------------------------------- */
/* Test: Numeric column position */
/*   ✔ Valid position returns unchanged */
/*  */
/* Test: Location units error */
/*   ✔ ""ERROR [su-valid-location] [number] `3em` is not a unitless number for $location."" and ""ERROR [su-valid-location] [number] `3em` is not a unitless number for $location."" should be equal */
/*  */
/* Test: Location floating-point error */
/*   ✔ ""ERROR [su-valid-location] Location (`3.5`) must be a 1-indexed intiger position."" and ""ERROR [su-valid-location] Location (`3.5`) must be a 1-indexed intiger position."" should be equal */
/*  */
/* Test: Location off-grid error */
/*   ✔ ""ERROR [su-valid-location] Position `8` does not exist in grid `1 2 3 5 8`."" and ""ERROR [su-valid-location] Position `8` does not exist in grid `1 2 3 5 8`."" should be equal */
/*   ✔ ""ERROR [su-valid-location] Position `-2` does not exist in grid `1 2 3 5 8`."" and ""ERROR [su-valid-location] Position `-2` does not exist in grid `1 2 3 5 8`."" should be equal */
/*  */
/* Test: Location/span combination error */
/*   ✔ ""ERROR [su-valid-location] There are not enough columns in grid `1 2 3 5 8` for span `6` at `3`."" and ""ERROR [su-valid-location] There are not enough columns in grid `1 2 3 5 8` for span `6` at `3`."" should be equal */
/*  */
/*  */
/* # Module: Susy Parse [function] */
/* --------------------------------- */
/* Test: Simple grid span */
/*   ✔ A single unitless number is returned as span only */
/*  */
/* Test: Span with symmetrical columns */
/*   ✔ Span and symmetrical columns are properly mapped */
/*  */
/* Test: Span with spread */
/*   ✔ Span and spread are properly mapped */
/*  */
/* Test: Span with location and asymmetrical columns */
/*   ✔ Span, location, and asymmetrical columns are properly mapped */
/*  */
/* Test: Span with keyword location */
/*   ✔ Span, keyword location, and columns are properly mapped */
/*  */
/* Test: Span all */
/*   ✔ Span "all" is properly mapped */
/*  */
/* Test: Span with column-width */
/*   ✔ Span with column-width is properly mapped */
/*  */
/* Test: Error on invalid column-width */
/*   ✔ Errors when column-width is invalid */
/*  */
/* Test: Columns with column-width */
/*   ✔ Columns with column-width is properly mapped */
/*  */
/* Test: Container-spread */
/*   ✔ Container-spread is properly mapped */
/*  */
/* Test: Keywords before span */
/*   ✔ Keywords can be passed in before the span value */
/*  */
/* Test: Explicit asymmetrical span */
/*   ✔ Explicit asymmetrical span is parsed properly */
/*  */
/* Test: Parse gutters */
/*   ✔ Set-gutters keyword allows shorthand gutters */
/*  */
/* Test: Unknown string parsing error */
/*   ✔ ""ERROR [susy-parse] Unknown shorthand property: [string] `wtf`"" and ""ERROR [susy-parse] Unknown shorthand property: [string] `wtf`"" should be equal */
/*  */
/* Test: Unknown number parsing error */
/*   ✔ ""ERROR [susy-parse] Unknown shorthand property: [number] `156`"" and ""ERROR [susy-parse] Unknown shorthand property: [number] `156`"" should be equal */
/*   ✔ ""ERROR [susy-parse] Unknown shorthand property: [number] `156`"" and ""ERROR [susy-parse] Unknown shorthand property: [number] `156`"" should be equal */
/*  */
/* Test: Unknown type parsing error */
/*   ✔ ""ERROR [susy-parse] Unknown shorthand property: [color] `#fff`"" and ""ERROR [susy-parse] Unknown shorthand property: [color] `#fff`"" should be equal */
/*  */
/*  */
/* # Module: Susy Normalize [function] */
/* ------------------------------------- */
/* Test: All values */
/*   ✔ "("span": 6, "columns": 140px 140px 140px 140px 140px 140px, "location": 1, "spread": 1, "container-spread": -1)" and "("span": 6, "columns": 140px 140px 140px 140px 140px 140px, "location": 1, "spread": 1, "container-spread": -1)" should be equal */
/*  */
/*  */
/* # Module: Susy Normalize Columns [function] */
/* --------------------------------------------- */
/* Test: Fluid shorthand */
/*   ✔ Fluid shorthand is converted to longform column description. */
/*  */
/* Test: Static shorthand */
/*   ✔ Static shorthand is converted to longform column description. */
/*  */
/* Test: Longhand */
/*   ✔ Longhand is passed through without changes. */
/*  */
/*  */
/* # Module: Susy Normalize Span [funtion] */
/* ----------------------------------------- */
/* Test: Keyword span */
/*   ✔ "6" and "6" should be equal */
/*  */
/* Test: Shorthand span */
/*   ✔ "4em 4em 4em" and "4em 4em 4em" should be equal */
/*  */
/*  */
/* # Module: Susy Normalize Spread [function] */
/* -------------------------------------------- */
/* Test: Keyword spread */
/*   ✔ Keyword is converted to a number for grid-math */
/*  */
/* Test: Numeric spread */
/*   ✔ Number is returned directly */
/*  */
/*  */
/* # Module: Susy Normalize Location [function] */
/* ---------------------------------------------- */
/* Test: Numeric column position */
/*   ✔ Valid position returns unchanged */
/*  */
/* Test: Initial position keyword */
/*   ✔ Valid initial keyword returns 1 */
/*  */
/* Test: Final position keyword */
/*   ✔ Final keyword returns calculated position from end */
/*  */
/*  */
/* # Module: Susy Span [function] */
/* -------------------------------- */
/* Test: Simple span */
/*   ✔ Simple span is calculated correctly using defaults */
/*  */
/* Test: Span with location */
/*   ✔ Span with location is calculated correctly using column defaults */
/*  */
/* Test: Static math */
/*   ✔ Static math returns length based on column-width */
/*  */
/* Test: Span with spread */
/*   ✔ Spread adds gutter width to usual span */
/*  */
/* Test: Explicit span */
/*   ✔ Span accepts explicit columns */
/*  */
/* Test: Span error */
/*   ✔ Error when there is no span */
/*  */
/*  */
/* # Module: Susy Gutter [function] */
/* ---------------------------------- */
/* Test: Fluid gutters */
/*   ✔ Gutters are calculated as a percentage of context */
/*  */
/* Test: Nested gutters */
/*   ✔ Gutters are calculated as a percentage of context */
/*  */
/* Test: Nested Asymmetrical gutters */
/*   ✔ Gutters are calculated as a percentage of context */
/*  */
/* Test: Static gutters */
/*   ✔ Static gutters are returned directly */
/*  */
/* Test: Gutters with container-spread */
/*   ✔ Factor container-spread into gutter context */
/*  */
/* Test: Gutters with custom config */
/*   ✔ Gutters account for custom configuration */
/*  */
/* Test: Gutters with full span shorthand */
/*   ✔ Allow full span shorthand */
/*  */
/*  */
/* # Module: Susy slice [function] */
/* --------------------------------- */
/* Test: Numerical slicing */
/*   ✔ Returns a sub-slice of columns */
/*  */
/* Test: Keyword slicing */
/*   ✔ Returns a keyword-slice of columns */
/*  */
/*  */
/* # Module: Unprefix */
/* -------------------- */
/* Test: Span */
/*   ✔ Unprefixed span() returns same result as susy-span() */
/*  */
/* Test: Gutter */
/*   ✔ Unprefixed gutter() returns same result as susy-gutter() */
/*  */
/* Test: Slice */
/*   ✔ Unprefixed slice() returns same result as susy-slice() */
/*  */
/*  */
/* # Module: SVG Validate Units [function] */
/* ----------------------------------------- */
/* Test: Success */
/*   ✔ Ems are a valid unit for SVG */
/*  */
/*  */
/* # SUMMARY ---------- */
/* 93 Tests: */
/*  - 93 Passed */
/*  - 0 Failed */
/* -------------------- */

/*# sourceMappingURL=test.css.map */
